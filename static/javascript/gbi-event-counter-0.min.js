(function(o,t){typeof exports=="object"&&typeof module<"u"?module.exports=t():typeof define=="function"&&define.amd?define(t):(o=typeof globalThis<"u"?globalThis:o||self,o.GBIEventCounter=t())})(this,function(){"use strict";let o,t=[];const p=()=>{const e=window.location;t.forEach(n=>{n(e)})},m=e=>(t.push(e),()=>{t=t.filter(n=>n!==e)}),h=()=>{o={subscribe:m},window.addEventListener("popstate",p)},g=()=>(o||h(),o);let r,c;const y="https://www.gbi-not-defined.com",_=async e=>(await fetch(y,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({customer:c,event:e})})).json(),T=e=>{c=e.customerId,r={send:_}},b=e=>(r||T(e),r);let s,i,a,d,l,u;const w=e=>{console.log("customerId:",i),console.log("listenToPushState:",a),console.log("overrideUrl:",d??"-"),console.log("eventType:",(e==null?void 0:e.type)??"-"),console.log("metadata:",e!=null&&e.metadata?"metadata exists":"-"),u.send({type:(e==null?void 0:e.type)??"other",metadata:(e==null?void 0:e.metadata)??{message:`Sending an event... for "${i}" customer`}})},E=e=>{const{customerId:n,listenToPushState:f,overrideUrl:I}=e;i=n,a=f??!1,d=I??null,u=b({customerId:n}),s={trackEvent:w},f&&(l=g(),l.subscribe(S=>{s.trackEvent({type:"location-changed",metadata:{location:S}})}))};return{registerGBIUniversalEventTracker:e=>(s||E(e),s)}});
//# sourceMappingURL=gbi-event-counter-0.1.13-dev.min.js.map
